"{\"notebook_name\":\"00_Basics.ipynb\"}\n\"## Overview\\nThe cryptography modules inside python are not as plentiful as other fields like machine learning or network secruity (see https://lwn.net/Articles/595790/). To the best of mour knowledge, the sympy provides somewhat complete cryptography tools http://docs.sympy.org/dev/_modules/sympy/crypto/crypto.html.\\n\\nIf you would like to get a flavor of cryopto, sage may be a good choice, and there are relative plenty source for it http://www.sagemath.org/library-publications.html#books.\\n\\nHowever, in this tutorial I will use pycrtpo and cryptography instead since it is directly builds upon python, and also contains a collections of great toolkit. See https://www.dlitz.net/software/pycrypto/doc/ and https://cryptography.io/en/latest/\\n\\n> Other python biding like pynacl may also be helpful, keep track with it!!\"︡{\"metadata\":{\"collapsed\":false,\"trusted\":true},\"cell_type\":\"markdown\"}\n\"## Pycrypto\\nHow can we do it (only pairing x)\"︡{\"metadata\":{\"trusted\":true,\"collapsed\":false},\"cell_type\":\"markdown\"}\n\"from Crypto.Cipher import AES\\nkey = 'starpasswordhere'\\nplaintext = 'Martinet is god!'\\n \\nencobj = AES.new(key, AES.MODE_ECB)\\nciphertext = encobj.encrypt(plaintext)\\n\\nprint ciphertext.encode('hex') \"︡{\"metadata\":{\"trusted\":true,\"collapsed\":false},\"cell_type\":\"code\",\"execution_count\":10,\"outputs\":[{\"output_type\":\"stream\",\"text\":\"292138362368e0cdd76508781b3f3b82\\n\",\"name\":\"stdout\"}]}\n\"> You might have noticed that the length of hex-encoded ciphertext is 32 characters. By encoding it in hex, we've doubled the size because each binary character is represented by two hex characters, thus the actual ciphertext is only 16 characters\\n\\n> The common encoding way in cryptography is **base64** (which is the same as many other applications), see http://blog.rlr-uk.com/2011/03/base64-encoding-is-not-cryptography.html for the reason\\n\\n> You may notice that we could not change the size of key and plaintext arbitrary in this example, we will relax this constraint by padding and some kdf (key derivation function) in later sections\"︡{\"metadata\":{},\"cell_type\":\"markdown\"}\n\"import binascii\\n \\nkey = 'starpasswordhere'\\nciphertext = binascii.unhexlify('292138362368e0cdd76508781b3f3b82')\\n \\ndecobj = AES.new(key, AES.MODE_ECB)\\nplaintext = decobj.decrypt(ciphertext)\\n \\n# Resulting plaintext\\nprint plaintext\"︡{\"metadata\":{\"trusted\":true,\"collapsed\":false},\"cell_type\":\"code\",\"execution_count\":11,\"outputs\":[{\"output_type\":\"stream\",\"text\":\"Martinet is god!\\n\",\"name\":\"stdout\"}]}\n\"## Cryptography\\nLet's see another well-documented toolbox cryptography(exactly the name!!)\"︡{\"metadata\":{\"trusted\":true,\"collapsed\":true},\"cell_type\":\"markdown\"}\n\"from cryptography.hazmat.primitives.ciphers import (\\n    Cipher, algorithms, modes\\n)\\nfrom cryptography.hazmat.backends import default_backend\\nkey = 'starpasswordhere'\\nplaintext = 'Martinet is god!'\\nencryptor = Cipher(algorithms.AES(key),modes.ECB(),backend=default_backend()).encryptor()\\nciphertext = encryptor.update(plaintext) + encryptor.finalize()\\nprint ciphertext.encode('hex') \"︡{\"metadata\":{\"trusted\":true,\"collapsed\":false},\"cell_type\":\"code\",\"execution_count\":14,\"outputs\":[{\"output_type\":\"stream\",\"text\":\"292138362368e0cdd76508781b3f3b82\\n\",\"name\":\"stdout\"}]}\n\"decryptor = Cipher(algorithms.AES(key), modes.ECB(), backend=default_backend()).decryptor()\\nplaintext = decryptor.update(ciphertext) + decryptor.finalize()\\nprint plaintext\"︡{\"metadata\":{\"trusted\":true,\"collapsed\":false},\"cell_type\":\"code\",\"execution_count\":17,\"outputs\":[{\"output_type\":\"stream\",\"text\":\"Martinet is god!\\n\",\"name\":\"stdout\"}]}\n\"\"︡{\"metadata\":{\"trusted\":true,\"collapsed\":true},\"cell_type\":\"code\",\"execution_count\":null,\"outputs\":[]}"
{"patch":[[[[0,"th i"],[-1,"t!!"],[0,"\"︡{\""]],856,856,11,8]],"time":1458400316275}
{"patch":[[[[0,"l, k"],[-1,"eep track with i"],[0,"\"︡{\""]],840,840,24,8]],"time":1458400312291}
{"patch":[[[[0,"lso "],[-1,"be helpful, k"],[0,"\"︡{\""]],827,827,21,8]],"time":1458400308295}
{"patch":[[[[0,"acl "],[-1,"may also "],[0,"\"︡{\""]],818,818,17,8]],"time":1458400304280}
{"patch":[[[[0,"e py"],[-1,"nacl "],[0,"\"︡{\""]],813,813,13,8]],"time":1458400300268}
{"patch":[[[[0,"ing like"],[-1," py"],[0,"\"︡{\"meta"]],806,806,19,16]],"time":1458400296260}
{"patch":[[[[0,"pyth"],[-1,"on biding like"],[0,"\"︡{\""]],796,796,22,8]],"time":1458400292264}
{"patch":[[[[0,"\\n> "],[-1,"Other pyth"],[0,"\"︡{\""]],786,786,18,8]],"time":1458400288279}
{"patch":[[[[0,"/latest/"],[-1,"\\n\\n> "],[0,"\"︡{\"meta"]],776,776,22,16]],"time":1458400284300}
{"patch":[[[[0,"ty ("],[-1,"see https://lwn.net/Articles/595790/"],[0,"). T"]],165,165,44,8]],"time":1458388317582}
{"patch":[[[[0,"uity"],[-1," ()"],[0,". To"]],163,163,11,8],[[[0,"yptograp"],[-1,"h"],[0,"y instea"]],548,548,17,16]],"time":1458388313221}
{"patch":[[[[0,"yptograp"],[1,"j"],[0,"y instea"]],548,548,16,17]],"time":1458388309239}
{"patch":[[[[0,"**base64"],[-1,"**"],[0," (which "]],1625,1625,18,16]],"time":1458388213221}
{"patch":[[[[0," is "],[-1,"**"],[0,"base"]],1621,1621,10,8]],"time":1458388209219}
{"patch":[[[[0,"ter "],[-1,"section"],[0,"s\"︡{"]],1958,1958,15,8]],"time":1458388204222}
{"patch":[[[[0,"n later "],[-1,"s"],[0,"\"︡{\"meta"]],1954,1954,17,16]],"time":1458388200264}
{"patch":[[[[0,"n fu"],[-1,"nction) in later "],[1,")"],[0,"\"︡{\""]],1941,1941,25,9]],"time":1458388195235}
{"patch":[[[[0,"key "],[-1,"derivation fu"],[0,")\"︡{"]],1928,1928,21,8]],"time":1458388191584}
{"patch":[[[[0,"ome "],[-1,"kdf (key )"],[0,"\"︡{\""]],1919,1919,18,8]],"time":1458388187234}
{"patch":[[[[0,"padd"],[-1,"ing and some "],[0,"\"︡{\""]],1906,1906,21,8]],"time":1458388183243}
{"patch":[[[[0," con"],[-1,"straint by padd"],[0,"\"︡{\""]],1891,1891,23,8]],"time":1458388179254}
{"patch":[[[[0,"l re"],[-1,"lax this con"],[0,"\"︡{\""]],1879,1879,20,8]],"time":1458388175235}
{"patch":[[[[0,"mple"],[-1,", we will re"],[0,"\"︡{\""]],1867,1867,20,8]],"time":1458388171256}
{"patch":[[[[0,"ry i"],[-1,"n this example"],[0,"\"︡{\""]],1853,1853,22,8]],"time":1458388167236}
{"patch":[[[[0,"t ar"],[-1,"bitrary "],[0,"i\"︡{"]],1844,1844,16,8]],"time":1458388163233}
{"patch":[[[[0,"lain"],[-1,"text ari"],[0,"\"︡{\""]],1837,1837,16,8]],"time":1458388159238}
{"patch":[[[[0," of "],[-1,"key and plain"],[0,"\"︡{\""]],1824,1824,21,8]],"time":1458388155235}
{"patch":[[[[0,"ange"],[-1," the size of "],[0,"\"︡{\""]],1811,1811,21,8]],"time":1458388151233}
{"patch":[[[[0," we "],[-1,"could not change"],[0,"\"︡{\""]],1795,1795,24,8]],"time":1458388147235}
{"patch":[[[[0,"ay n"],[-1,"otice that we "],[0,"\"︡{\""]],1781,1781,22,8]],"time":1458388143237}
{"patch":[[[[0,"son\\"],[-1,"n\\n> You may "],[0,"n\"︡{"]],1767,1767,21,8]],"time":1458388139240}
{"patch":[[[[0,"e re"],[-1,"ason\\n"],[0,"\"︡{\""]],1762,1762,14,8]],"time":1458388135251}
{"patch":[[[[0,"for "],[-1,"the re"],[0,"\"︡{\""]],1756,1756,14,8]],"time":1458388131259}
{"patch":[[[[0,"ns),"],[-1," see http://blog.rlr-uk.com/2011/03/base64-encoding-is-not-cryptography.html for"],[0," \"︡{"]],1675,1675,88,8]],"time":1458388127233}
{"patch":[[[[0," app"],[-1,"lications), "],[1,")"],[0,"\"︡{\""]],1664,1664,20,9]],"time":1458388123241}
{"patch":[[[[0,"othe"],[-1,"r app"],[0,")\"︡{"]],1659,1659,13,8]],"time":1458388119231}
{"patch":[[[[0,"e sa"],[-1,"me as many othe"],[0,")\"︡{"]],1644,1644,23,8]],"time":1458388115227}
{"patch":[[[[0,"ich "],[-1,"is the sa"],[0,")\"︡{"]],1635,1635,17,8]],"time":1458388111232}
{"patch":[[[[0," bas"],[-1,"e64 (which )"],[0,"\"︡{\""]],1624,1624,20,8]],"time":1458388107279}
{"patch":[[[[0,"raph"],[-1,"y is bas"],[1," "],[0,"\"︡{\""]],1616,1616,16,9]],"time":1458388103250}
{"patch":[[[[0," in "],[-1,"cryptograph "],[0,"\"︡{\""]],1605,1605,20,8]],"time":1458388099245}
{"patch":[[[[0,"odin"],[-1,"g way in "],[0,"\"︡{\""]],1596,1596,17,8]],"time":1458388095240}
{"patch":[[[[0," common "],[-1,"encodin"],[1,"way "],[0,"\"︡{\"meta"]],1585,1585,23,20]],"time":1458388091222}
{"patch":[[[[0,"comm"],[-1,"on way "],[0,"\"︡{\""]],1586,1586,15,8]],"time":1458388087220}
{"patch":[[[[0,"The "],[-1,"comm"],[1,"g"],[0,"\"︡{\""]],1582,1582,12,9]],"time":1458388083222}
{"patch":[[[[0,"rs\\n"],[-1,"\\n> The g"],[0,"\"︡{\""]],1574,1574,17,8]],"time":1458388079222}
{"patch":[[[[0,"aracters"],[-1,"\\n"],[0,"\"︡{\"meta"]],1568,1568,18,16]],"time":1458388075241}
{"patch":[[[[0,"e()\\nprint p"],[-1,"laintext"],[0,"\"︡{\"metadata"]],2922,2922,32,24],[[[0,"count\":1"],[-1,"7"],[1,"6"],[0,",\"output"]],3013,3013,17,17],[[[0,"e\":\""],[-1,"stream\",\"text\":\"Martinet is god!\\n\",\"name\":\"stdout\""],[1,"error\",\"ename\":\"NameError\",\"evalue\":\"name 'decrypt' is not defined\",\"traceback\":[\"\\u001b[1;31m---------------------------------------------------------------------------\\u001b[0m\",\"\\u001b[1;31mNameError\\u001b[0m                                 Traceback (most recent call last)\",\"\\u001b[1;32m<ipython-input-16-c4f87a8bce80>\\u001b[0m in \\u001b[0;36m<module>\\u001b[1;34m()\\u001b[0m\\n\\u001b[0;32m      1\\u001b[0m \\u001b[0mdecryptor\\u001b[0m \\u001b[1;33m=\\u001b[0m \\u001b[0mCipher\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[0malgorithms\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mAES\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[0mkey\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[0mmodes\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mECB\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[0mbackend\\u001b[0m\\u001b[1;33m=\\u001b[0m\\u001b[0mdefault_backend\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mdecryptor\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m----> 2\\u001b[1;33m \\u001b[1;32mprint\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[0mdecrypt\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[0mkey\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[0mciphertext\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0m\",\"\\u001b[1;31mNameError\\u001b[0m: name 'decrypt' is not defined\"]"],[0,"}]}\n"]],3046,3046,59,1428]],"time":1458305239452}
{"patch":[[[[0,")\\nprint"],[-1," p"],[1,"(decrypt(key, ciphertext))"],[0,"\"︡{\"meta"]],2924,2924,18,42]],"time":1458305235410}
{"patch":[[[[0,")\\nplain"],[-1,"text = "],[0,"decrypto"]],2859,2859,23,16]],"time":1458305231405}
{"patch":[[[[0,"ptor()\\n"],[-1,"plain"],[1,"PLAIN"],[0,"decrypto"]],2854,2854,21,21]],"time":1458305227430}
{"patch":[[[[0,"()\\n"],[-1,"PLAIN"],[0,"decr"]],2858,2858,13,8]],"time":1458305223406}
{"patch":[[[[0,"ptor()\\n"],[-1,"decryptor."],[0,"update(c"]],2854,2854,26,16]],"time":1458305219511}
{"patch":[[[[0,"()\\n"],[-1,"update(ciphertext) + decryptor.finalize()"],[0,"\\npr"]],2858,2858,49,8]],"time":1458305215404}
{"patch":[[[[0,"yptor()\\"],[-1,"n\\"],[0,"nprint(d"]],2853,2853,18,16]],"time":1458305211414}
{"patch":[[[[0,"count\":1"],[-1,"6"],[1,"5"],[0,",\"output"]],2972,2972,17,17],[[[0,"ename\":\""],[-1,"Name"],[1,"Syntax"],[0,"Error\",\""]],3017,3017,20,22],[[[0,"e\":\""],[-1,"name 'decrypt' is not defined\",\"traceback\":[\"\\u001b[1;31m---------------------------------------------------------------------------\\u001b[0m\",\"\\u001b[1;31mNameError\\u001b[0m                                 Traceback (most recent call last)\",\""],[1,"invalid syntax (<ipython-input-15-2ad4298b20a0>, line 1)\",\"traceback\":[\"\\u001b[1;36m  File "],[0,"\\u00"]],3044,3044,251,99],[[[0,"1b[1;32m"],[1,"\\\""],[0,"<ipython"]],3143,3143,16,18],[[[0,"ut-1"],[-1,"6-c4f87a8bce80>\\u001b[0m in "],[1,"5-2ad4298b20a0>\\\""],[0,"\\u001b["],[-1,"0"],[1,"1"],[0,";36m"],[-1,"<module>"],[1,", line "],[0,"\\u00"]],3165,3165,56,44],[[[0,"[1;3"],[-1,"4m()"],[1,"2m1"],[0,"\\u00"]],3211,3211,12,11],[[[0,"01b["],[-1,"0;32"],[1,"1;33"],[0,"m    "],[-1,"  1\\u001b[0m \\u001b[0mdecryptor\\u001b[0m \\u001b[1;33m=\\u001b[0m \\u001b[0mCipher\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[0malgorithms\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mAES\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[0mkey\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[0mmodes\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mECB\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[0mbackend\\u001b[0m\\u001b[1;33m=\\u001b[0m\\u001b[0mdefault_backend\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mdecryptor\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m----> 2\\u001b[1;33m \\u001b[1;32mprint\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[0mdecrypt\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[0mkey\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[0mciphertext\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0m\",\"\\u001b[1;31mNameError\\u001b[0m: name 'decrypt' is not defined"],[1,"decryptor = Cipher(algorithms.AES(key), modes.ECB()), backend=default_backend()).decryptor()\\u001b[0m\\n\\u001b[1;37m                                                                                   ^\\u001b[0m\\n\\u001b[1;31mSyntaxError\\u001b[0m\\u001b[1;31m:\\u001b[0m invalid syntax\\n"],[0,"\"]}]"]],3232,3232,1038,298]],"time":1458305185485}
{"patch":[[[[0,"es.ECB()"],[1,")"],[0,", backen"]],2812,2812,16,17]],"time":1458305181067}
{"patch":[[[[0,"ed\":"],[-1,"false},\"cell_type\":\"code\",\"execution_count\":15,\"outputs\":[{\"output_type\":\"error\",\"ename\":\"SyntaxError\",\"evalue\":\"invalid syntax (<ipython-input-15-2ad4298b20a0>, line 1)\",\"traceback\":[\"\\u001b[1;36m  File \\u001b[1;32m\\\"<ipython-input-15-2ad4298b20a0>\\\"\\u001b[1;36m, line \\u001b[1;32m1\\u001b[0m\\n\\u001b[1;33m    decryptor = Cipher(algorithms.AES(key), modes.ECB()), backend=default_backend()).decryptor()\\u001b[0m\\n\\u001b[1;37m                                                                                   ^\\u001b[0m\\n\\u001b[1;31mSyntaxError\\u001b[0m\\u001b[1;31m:\\u001b[0m invalid syntax\\n\"]}]}\n\"\"︡{\"metadata\":{\"trusted\":true,\"collapsed\":"],[0,"true"]],2932,2932,648,8]],"time":1458305167406}
{"patch":[[[[0,"phertext"],[1,",g\\n"],[0,"))\"︡{\"me"]],2884,2884,16,20]],"time":1458305163406}
{"patch":[[[[0,"ypt(key,"],[1," "],[0," ciphert"]],2873,2873,16,17],[[[0,"hertext,"],[1,"\\n    ta"],[0,"g\\n))\"︡{"]],2886,2886,16,24]],"time":1458305159417}
{"patch":[[[[0,"ypt(key,"],[1," b\\\"authenticated but not encrypted payload\\\",\\n    iv,\\n  "],[0,"  cipher"]],2873,2873,16,75]],"time":1458305155403}
{"patch":[[[[0,"ypt(key,"],[1,"   "],[0," b\\\"auth"]],2873,2873,16,19]],"time":1458305151404}
{"patch":[[[[0,"decrypt("],[1,"    "],[0,"key,"],[1,"\\n"],[0,"    b\\\"a"]],2869,2869,20,26]],"time":1458305147404}
{"patch":[[[[0,"()\\n"],[-1,"print(decrypt(    key,\\n    b\\\"authenticated but not encrypted payload\\\",\\n    iv,\\n    ciphertext,\\n    tag\\n))"],[0,"\"︡{\""]],2859,2859,120,8]],"time":1458305143514}
{"patch":[[[[0,"ryptor()"],[-1,"\\n"],[0,"\"︡{\"meta"]],2853,2853,18,16]],"time":1458305139480}
{"patch":[[[[0,", modes."],[-1,"ECB()"],[1,"ㄖ"],[0,"), backe"]],2807,2807,21,17]],"time":1458305116407}
{"patch":[[[[0,"des."],[-1,"ㄖ"],[1,"GCM(iv, tag"],[0,"), b"]],2811,2811,9,19]],"time":1458305112410}
{"patch":[[[[0,"ackend()"],[1,"    "],[0,").decryp"]],2846,2846,16,20]],"time":1458305088881}
{"patch":[[[[0,"v, tag),"],[1,"\\n       "],[0," backend"]],2820,2820,16,25],[[[0,"ackend()"],[1,"\\n"],[0,"    ).de"]],2855,2855,16,18]],"time":1458305084437}
{"patch":[[[[0,"ES(key),"],[1,"       "],[0," modes.G"]],2800,2800,16,23]],"time":1458305080437}
{"patch":[[[[0,"ryptor = Cipher("],[1,"        "],[0,"algorithms.AES(k"]],2772,2772,32,40],[[[0,"ES(key),"],[1,"\\n"],[0,"        "]],2808,2808,16,18]],"time":1458305076457}
{"patch":[[[[0," Cipher("],[1,"\\n"],[0,"        "]],2780,2780,16,18]],"time":1458305072511}
{"patch":[[[[0,"ut\"}]}\n\""],[1,"    "],[0,"decrypto"]],2761,2761,16,20]],"time":1458305068433}
{"patch":[[[[0,"]}\n\""],[-1,"    decryptor = Cipher(\\n        algorithms.AES(key),\\n        modes.GCM(iv, tag),\\n        backend=default_backend()\\n    ).decryptor()"],[0,"\"︡{\""]],2765,2765,144,8]],"time":1458305064446}
{"patch":[[[[0,"t\":1"],[-1,"4"],[1,"3"],[0,",\"ou"]],2664,2664,9,9],[[[0,"t\":\""],[-1,"292138362368e0cdd76508781b3f3b82"],[1,")!86#h���e\\bx\\u001b?;�"],[0,"\\n\","]],2709,2709,40,30]],"time":1458305043411}
{"patch":[[[[0," ciphertext."],[-1,"encode('hex') "],[0,"\"︡{\"metadata"]],2555,2555,38,24]],"time":1458305039405}
{"patch":[[[[0,"phertext"],[-1,"."],[1,"ㄡ"],[0,"\"︡{\"meta"]],2558,2558,17,17]],"time":1458305033415}
{"patch":[[[[0,"text"],[-1,"ㄡ"],[0,"\"︡{\""]],2562,2562,9,8],[[[0,"_count\":"],[-1,"13"],[1,"null"],[0,",\"output"]],2644,2644,18,20],[[[0,"s\":["],[-1,"{\"output_type\":\"stream\",\"text\":\")!86#h���e\\bx\\u001b?;�\\n\",\"name\":\"stdout\"}"],[0,"]}\n\""]],2664,2664,82,8]],"time":1458305029411}
{"patch":[[[[0,"_count\":"],[-1,"null,\"outputs\":["],[1,"12,\"outputs\":[{\"output_type\":\"error\",\"ename\":\"NameError\",\"evalue\":\"name 'default_backend' is not defined\",\"traceback\":[\"\\u001b[1;31m---------------------------------------------------------------------------\\u001b[0m\",\"\\u001b[1;31mNameError\\u001b[0m                                 Traceback (most recent call last)\",\"\\u001b[1;32m<ipython-input-12-e33fd9cdec4a>\\u001b[0m in \\u001b[0;36m<module>\\u001b[1;34m()\\u001b[0m\\n\\u001b[0;32m      4\\u001b[0m \\u001b[0mkey\\u001b[0m \\u001b[1;33m=\\u001b[0m \\u001b[1;34m'starpasswordhere'\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m      5\\u001b[0m \\u001b[0mplaintext\\u001b[0m \\u001b[1;33m=\\u001b[0m \\u001b[1;34m'Martinet is god!'\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m----> 6\\u001b[1;33m \\u001b[0mencryptor\\u001b[0m \\u001b[1;33m=\\u001b[0m \\u001b[0mCipher\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[0malgorithms\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mAES\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[0mkey\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m,\\u001b[0m\\u001b[0mmodes\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mECB\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m,\\u001b[0m\\u001b[0mbackend\\u001b[0m\\u001b[1;33m=\\u001b[0m\\u001b[0mdefault_backend\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mencryptor\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[0;32m      7\\u001b[0m \\u001b[0mciphertext\\u001b[0m \\u001b[1;33m=\\u001b[0m \\u001b[0mencryptor\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mupdate\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[0mplaintext\\u001b[0m\\u001b[1;33m)\\u001b[0m \\u001b[1;33m+\\u001b[0m \\u001b[0mencryptor\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mfinalize\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m      8\\u001b[0m \\u001b[1;32mprint\\u001b[0m \\u001b[0mciphertext\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\",\"\\u001b[1;31mNameError\\u001b[0m: name 'default_backend' is not defined\"]}"],[0,"]}\n\"\"︡{\""]],2644,2644,32,2021]],"time":1458305025418}
{"patch":[[[[0,"\\n)\\"],[-1,"nfrom cryptography.hazmat.backends import default_backend\\"],[0,"nkey"]],2273,2273,66,8]],"time":1458305004441}
{"patch":[[[[0,"ed\":"],[-1,"false},\"cell_type\":\"code\",\"execution_count\":12,\"outputs\":[{\"output_type\":\"error\",\"ename\":\"NameError\",\"evalue\":\"name 'default_backend' is not defined\",\"traceback\":[\"\\u001b[1;31m---------------------------------------------------------------------------\\u001b[0m\",\"\\u001b[1;31mNameError\\u001b[0m                                 Traceback (most recent call last)\",\"\\u001b[1;32m<ipython-input-12-e33fd9cdec4a>\\u001b[0m in \\u001b[0;36m<module>\\u001b[1;34m()\\u001b[0m\\n\\u001b[0;32m      4\\u001b[0m \\u001b[0mkey\\u001b[0m \\u001b[1;33m=\\u001b[0m \\u001b[1;34m'starpasswordhere'\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m      5\\u001b[0m \\u001b[0mplaintext\\u001b[0m \\u001b[1;33m=\\u001b[0m \\u001b[1;34m'Martinet is god!'\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m----> 6\\u001b[1;33m \\u001b[0mencryptor\\u001b[0m \\u001b[1;33m=\\u001b[0m \\u001b[0mCipher\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[0malgorithms\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mAES\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[0mkey\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m,\\u001b[0m\\u001b[0mmodes\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mECB\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m,\\u001b[0m\\u001b[0mbackend\\u001b[0m\\u001b[1;33m=\\u001b[0m\\u001b[0mdefault_backend\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mencryptor\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[0;32m      7\\u001b[0m \\u001b[0mciphertext\\u001b[0m \\u001b[1;33m=\\u001b[0m \\u001b[0mencryptor\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mupdate\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[0mplaintext\\u001b[0m\\u001b[1;33m)\\u001b[0m \\u001b[1;33m+\\u001b[0m \\u001b[0mencryptor\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mfinalize\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m      8\\u001b[0m \\u001b[1;32mprint\\u001b[0m \\u001b[0mciphertext\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\",\"\\u001b[1;31mNameError\\u001b[0m: name 'default_backend' is not defined\"]}]}\n\"\"︡{\"metadata\":{\"trusted\":true,\"collapsed\":"],[0,"true"]],2546,2546,2103,8]],"time":1458304941418}
{"patch":[[[[0,"lize()\\n"],[-1,"print ciphertext"],[0,"\"︡{\"meta"]],2484,2484,32,16]],"time":1458304936409}
{"patch":[[[[0,"nalize()"],[-1,"\\n"],[0,"\"︡{\"meta"]],2482,2482,18,16]],"time":1458304932415}
{"patch":[[[[0,"\\n)\\"],[-1,"nkey = 'starpasswordhere'\\nplaintext = 'Martinet is god!'\\"],[0,"nenc"]],2273,2273,66,8]],"time":1458304891432}
{"patch":[[[[0,"s.EC"],[-1,"B"],[0,"("],[1,"iv"],[0,"),ba"]],2321,2321,10,11]],"time":1458304881407}
{"patch":[[[[0,"),modes."],[-1,"E"],[0,"C"],[1,"M"],[0,"(iv),bac"]],2315,2315,18,18]],"time":1458304877411}
{"patch":[[[[0,"),modes."],[1,"G"],[0,"CM(iv),b"]],2315,2315,16,17]],"time":1458304873416}
{"patch":[[[[0,"()\\n"],[-1,"ciphertext = encryptor.update(plaintext) + encryptor.finalize()"],[0,"\"︡{\""]],2367,2367,71,8]],"time":1458304339569}
{"patch":[[[[0,"ryptor()"],[-1,"\\n"],[0,"\"︡{\"meta"]],2361,2361,18,16]],"time":1458304326923}
{"patch":[[[[0,"ES(key),"],[1,"       "],[0,"modes.GC"]],2309,2309,16,23],[[[0,"GCM(iv),"],[1,"\\n        "],[0,"backend="]],2330,2330,16,26],[[[0,"ackend()"],[1,"\\n"],[0,").encryp"]],2365,2365,16,18]],"time":1458304317425}
{"patch":[[[[0," Cipher("],[1,"        "],[0,"algorith"]],2289,2289,16,24],[[[0,"ES(key),"],[1,"\\n "],[0,"       m"]],2317,2317,16,19]],"time":1458304315129}
{"patch":[[[[0," Cipher("],[1,"\\n"],[0,"        "]],2289,2289,16,18],[[[0,"kend()\\n"],[1,"   "],[0,").encryp"]],2380,2380,16,19]],"time":1458304305420}
{"patch":[[[[0,"des\\n)\\n"],[1," "],[0,"encrypto"]],2270,2270,16,17],[[[0,"d()\\n   "],[1," "],[0,").encryp"]],2384,2384,16,17]],"time":1458304300427}
{"patch":[[[[0,"n)\\n"],[-1," encryptor = Cipher(\\n        algorithms.AES(key),\\n        modes.GCM(iv),\\n        backend=default_backend()\\n    ).encryptor()"],[0,"\"︡{\""]],2274,2274,136,8]],"time":1458304298266}
{"patch":[[[[0,"modes\\n)"],[-1,"\\n"],[0,"\"︡{\"meta"]],2268,2268,18,16]],"time":1458304284461}
{"patch":[[[[0,"\"}\n\""],[-1,"from cryptography.hazmat.primitives.ciphers import (\\n    Cipher, algorithms, modes\\n)"],[0,"\"︡{\""]],2186,2186,94,8]],"time":1458304280529}
{"patch":[[[[0,"wn\"}"],[-1,"\n\"\"︡{\"metadata\":{\"trusted\":true,\"collapsed\":true},\"cell_type\":\"code\",\"execution_count\":null,\"outputs\":[]}"]],2184,2184,109,4]],"time":1458304206963}
{"patch":[[[[0,"tly "],[-1,"the name!!"],[0,")\"︡{"]],2102,2102,18,8]],"time":1458304201422}
{"patch":[[[[0,"aphy"],[-1,"(exactly )"],[0,"\"︡{\""]],2093,2093,18,8]],"time":1458304197424}
{"patch":[[[[0,"toolbox "],[-1,"cryptography"],[0,"\"︡{\"meta"]],2077,2077,28,16]],"time":1458304193453}
{"patch":[[[[0,"nted"],[-1," toolbox "],[0,"\"︡{\""]],2072,2072,17,8]],"time":1458304189422}
{"patch":[[[[0,"her "],[-1,"well-documented"],[0,"\"︡{\""]],2057,2057,23,8]],"time":1458304185413}
{"patch":[[[[0,"nLet"],[-1,"'s see another "],[0,"\"︡{\""]],2042,2042,23,8]],"time":1458304181545}
{"patch":[[[[0,"ypto"],[-1,"graphy\\nLet"],[0,"\"︡{\""]],2031,2031,19,8]],"time":1458304177417}
{"patch":[[[[0,"}]}\n\"## "],[-1,"Crypto"],[0,"\"︡{\"meta"]],2021,2021,22,16]],"time":1458304173417}
{"patch":[[[[0,"ut\"}]}\n\""],[-1,"## "],[0,"\"︡{\"meta"]],2018,2018,19,16]],"time":1458304165467}
{"patch":[[[[0,"nt\":"],[-1,"11"],[1,"null"],[0,",\"ou"]],1936,1936,10,12],[[[0,"s\":["],[-1,"{\"output_type\":\"stream\",\"text\":\"Martinet is god!\\n\",\"name\":\"stdout\"}"],[0,"]}\n\""]],1952,1952,76,8],[[[0,":true},\"cell_type\":\""],[-1,"markdown\""],[1,"code\",\"execution_count\":null,\"outputs\":[]"],[0,"}"]],2001,2001,30,62]],"time":1458304161425}
{"patch":[[[[0,"_count\":"],[-1,"null,\"outputs\":["],[1,"4,\"outputs\":[{\"output_type\":\"stream\",\"text\":\"/projects/sage/sage-6.10/local/lib/python2.7/site-packages/Crypto/Util/number.py:57: PowmInsecureWarning: Not using mpz_powm_sec.  You should rebuild using libgmp >= 5 to avoid timing attack vulnerability.\\n  _warn(\\\"Not using mpz_powm_sec.  You should rebuild using libgmp >= 5 to avoid timing attack vulnerability.\\\", PowmInsecureWarning)\\n\",\"name\":\"stderr\"},{\"output_type\":\"display_data\",\"data\":{\"image/png\":\"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\\n\",\"text/plain\":\"<matplotlib.figure.Figure at 0x7f87fa449a10>\"},\"metadata\":{}}"],[0,"]}\n\"\"︡{\""]],1932,1932,32,21204]],"time":1458304142546}
{"patch":[[[[0,"fy('"],[-1,"292138362368e0cdd76508781b3f3b82"],[1,"e8da47acc08bc751745ef8fbff44e107"],[0,"')\\n"]],1693,1693,40,40]],"time":1458304136425}
{"patch":[[[[0,"nkey = '"],[-1,"star"],[1,"mysecret"],[0,"password"],[-1,"here"],[0,"'\\nciphe"]],1637,1637,32,32]],"time":1458304128414}
{"patch":[[[[0,"rt b"],[-1,"inascii\\n \\nkey = 'mysecretpassword'\\nciphertext = binascii.unhexlify('e8da47acc08bc751745ef8fbff44e107')\\n \\ndecobj = AES.new(key, AES.MODE_ECB)\\nplaintext = decobj.decrypt(ciphertext"],[1,"ase64\\nfrom Crypto import Random\\nfrom Crypto.Cipher import AES\\n\\n# Function to encrypt the information.\\ndef fn_encrypt( message, passphrase ):\\n    BLOCK_SIZE = 16\\n    IV = Random.new().read(BLOCK_SIZE)\\n    aes = AES.new( passphrase, AES.MODE_CFB, IV )\\n    return base64.b64encode(aes.encrypt(message))\\n\\n# Get the encrypted text.\\ntext_enc = fn_encrypt( message=text, passphrase='ThisIsNotEncrypt' )\\n\\n# Create a grid for the encrypted text.\\ntext_enc_grid = fn_hex_grid( input_text=text_enc, hex_range=hex_range "],[0,")\\n"],[-1," "],[0,"\\n# "],[-1,"Resulting plaintext\\nprint plaintext"],[1,"Plot the figure\\nplt.figure( figsize=(8,8) )\\nplt.pcolor(text_enc_grid, cmap=plt.cm.OrRd)\\nplt.xlim([30, 120])\\nplt.ylim([30, 120])\\nplt.show()"],[0,"\"︡{\""]],1622,1622,236,680]],"time":1458304121457}
{"patch":[[[[0,"]}\n\""],[-1,"> You might have noticed that the length of hex-encoded ciphertext is 32 characters. By encoding it in hex, we've doubled the size because each binary character is represented by two hex characters, thus the actual ciphertext is only 16 characters"],[0,"\"︡{\""]],1325,1325,255,8]],"time":1458304106070}
{"patch":[[[[0,"a\":{"],[-1,"},\"cell_type\":\"markdown\""],[1,"\"trusted\":true,\"collapsed\":true},\"cell_type\":\"code\",\"execution_count\":null,\"outputs\":[]"],[0,"}\n\"i"]],1340,1340,32,95]],"time":1458304094458}
{"patch":[[[[0,"_count\":"],[-1,"10"],[1,"9"],[0,",\"output"]],1219,1219,18,17],[[[0,"s\":["],[-1,"{\"output_type\":\"stream\",\"text\":\"292138362368e0cdd76508781b3f3b82\\n\",\"name\":\"stdout\"}"],[0,"]}\n\""]],1236,1236,92,8]],"time":1458303979547}
{"patch":[[[[0,"ext)"],[-1,"\\n\\nprint ciphertext.encode('hex') "],[0,"\"︡{\""]],1102,1102,43,8]],"time":1458303975516}
{"patch":[[[[0,"[]}\n"],[-1,"\"\"︡{\"metadata\":{\"trusted\":true,\"collapsed\":true},\"cell_type\":\"code\",\"execution_count\":null,\"outputs\":[]}\n"],[0,"\"imp"]],1204,1204,113,8]],"time":1458303963863}
{"patch":[[[[0,"_count\":"],[-1,"9"],[1,"8"],[0,",\"output"]],1184,1184,17,17]],"time":1458303959470}
{"patch":[[[[0,"sswordhe"],[-1,"re"],[0,"'\\nplain"]],983,983,18,16],[[[0,"nt\":"],[-1,"8,\"outputs\":["],[1,"7,\"outputs\":[{\"output_type\":\"error\",\"ename\":\"ValueError\",\"evalue\":\"AES key must be either 16, 24, or 32 bytes long\",\"traceback\":[\"\\u001b[1;31m---------------------------------------------------------------------------\\u001b[0m\",\"\\u001b[1;31mValueError\\u001b[0m                                Traceback (most recent call last)\",\"\\u001b[1;32m<ipython-input-7-b313685049c4>\\u001b[0m in \\u001b[0;36m<module>\\u001b[1;34m()\\u001b[0m\\n\\u001b[0;32m      3\\u001b[0m \\u001b[0mplaintext\\u001b[0m \\u001b[1;33m=\\u001b[0m \\u001b[1;34m'Martinet is god!'\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m      4\\u001b[0m \\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m----> 5\\u001b[1;33m \\u001b[0mencobj\\u001b[0m \\u001b[1;33m=\\u001b[0m \\u001b[0mAES\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mnew\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[0mkey\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[0mAES\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mMODE_ECB\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[0;32m      6\\u001b[0m \\u001b[0mciphertext\\u001b[0m \\u001b[1;33m=\\u001b[0m \\u001b[0mencobj\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mencrypt\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[0mplaintext\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\",\"\\u001b[1;32m/projects/sage/sage-6.10/local/lib/python2.7/site-packages/Crypto/Cipher/AES.py\\u001b[0m in \\u001b[0;36mnew\\u001b[1;34m(key, *args, **kwargs)\\u001b[0m\\n\\u001b[0;32m     93\\u001b[0m     \\u001b[1;33m:\\u001b[0m\\u001b[0mReturn\\u001b[0m\\u001b[1;33m:\\u001b[0m \\u001b[0man\\u001b[0m \\u001b[1;33m`\\u001b[0m\\u001b[0mAESCipher\\u001b[0m\\u001b[1;33m`\\u001b[0m \\u001b[0mobject\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m     94\\u001b[0m     \\\"\\\"\\\"\\n\\u001b[1;32m---> 95\\u001b[1;33m     \\u001b[1;32mreturn\\u001b[0m \\u001b[0mAESCipher\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[0mkey\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[1;33m*\\u001b[0m\\u001b[0margs\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[1;33m**\\u001b[0m\\u001b[0mkwargs\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[0;32m     96\\u001b[0m \\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m     97\\u001b[0m \\u001b[1;31m#: Electronic Code Book (ECB). See `blockalgo.MODE_ECB`.\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\",\"\\u001b[1;32m/projects/sage/sage-6.10/local/lib/python2.7/site-packages/Crypto/Cipher/AES.py\\u001b[0m in \\u001b[0;36m__init__\\u001b[1;34m(self, key, *args, **kwargs)\\u001b[0m\\n\\u001b[0;32m     57\\u001b[0m \\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m     58\\u001b[0m         See also `new()` at the module level.\\\"\\\"\\\"\\n\\u001b[1;32m---> 59\\u001b[1;33m         \\u001b[0mblockalgo\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mBlockAlgo\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0m__init__\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[0mself\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[0m_AES\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[0mkey\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[1;33m*\\u001b[0m\\u001b[0margs\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[1;33m**\\u001b[0m\\u001b[0mkwargs\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[0;32m     60\\u001b[0m \\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m     61\\u001b[0m \\u001b[1;32mdef\\u001b[0m \\u001b[0mnew\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[0mkey\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[1;33m*\\u001b[0m\\u001b[0margs\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[1;33m**\\u001b[0m\\u001b[0mkwargs\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m:\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\",\"\\u001b[1;32m/projects/sage/sage-6.10/local/lib/python2.7/site-packages/Crypto/Cipher/blockalgo.py\\u001b[0m in \\u001b[0;36m__init__\\u001b[1;34m(self, factory, key, *args, **kwargs)\\u001b[0m\\n\\u001b[0;32m    139\\u001b[0m \\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m    140\\u001b[0m         \\u001b[1;32mif\\u001b[0m \\u001b[0mself\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mmode\\u001b[0m \\u001b[1;33m!=\\u001b[0m \\u001b[0mMODE_OPENPGP\\u001b[0m\\u001b[1;33m:\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m--> 141\\u001b[1;33m             \\u001b[0mself\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0m_cipher\\u001b[0m \\u001b[1;33m=\\u001b[0m \\u001b[0mfactory\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mnew\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[0mkey\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[1;33m*\\u001b[0m\\u001b[0margs\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[1;33m**\\u001b[0m\\u001b[0mkwargs\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[0;32m    142\\u001b[0m             \\u001b[0mself\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mIV\\u001b[0m \\u001b[1;33m=\\u001b[0m \\u001b[0mself\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0m_cipher\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mIV\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m    143\\u001b[0m         \\u001b[1;32melse\\u001b[0m\\u001b[1;33m:\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\",\"\\u001b[1;31mValueError\\u001b[0m: AES key must be either 16, 24, or 32 bytes long\"]}"],[0,"]}\n\""]],1186,1186,21,4880]],"time":1458303940568}
{"patch":[[[[0,"password"],[-1,"he"],[0,"'\\nplain"]],981,981,18,16]],"time":1458303936467}
{"patch":[[[[0,"nt\":"],[-1,"7,\"outputs\":[{\"output_type\":\"error\",\"ename\":\"ValueError\",\"evalue\":\"AES key must be either 16, 24, or 32 bytes long\",\"traceback\":[\"\\u001b[1;31m---------------------------------------------------------------------------\\u001b[0m\",\"\\u001b[1;31mValueError\\u001b[0m                                Traceback (most recent call last)\",\"\\u001b[1;32m<ipython-input-7-b313685049c4>\\u001b[0m in \\u001b[0;36m<module>\\u001b[1;34m()\\u001b[0m\\n\\u001b[0;32m      3\\u001b[0m \\u001b[0mplaintext\\u001b[0m \\u001b[1;33m=\\u001b[0m \\u001b[1;34m'Martinet is god!'\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m      4\\u001b[0m \\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m----> 5\\u001b[1;33m \\u001b[0mencobj\\u001b[0m \\u001b[1;33m=\\u001b[0m \\u001b[0mAES\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mnew\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[0mkey\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[0mAES\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mMODE_ECB\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[0;32m      6\\u001b[0m \\u001b[0mciphertext\\u001b[0m \\u001b[1;33m=\\u001b[0m \\u001b[0mencobj\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mencrypt\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[0mplaintext\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\",\"\\u001b[1;32m/projects/sage/sage-6.10/local/lib/python2.7/site-packages/Crypto/Cipher/AES.py\\u001b[0m in \\u001b[0;36mnew\\u001b[1;34m(key, *args, **kwargs)\\u001b[0m\\n\\u001b[0;32m     93\\u001b[0m     \\u001b[1;33m:\\u001b[0m\\u001b[0mReturn\\u001b[0m\\u001b[1;33m:\\u001b[0m \\u001b[0man\\u001b[0m \\u001b[1;33m`\\u001b[0m\\u001b[0mAESCipher\\u001b[0m\\u001b[1;33m`\\u001b[0m \\u001b[0mobject\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m     94\\u001b[0m     \\\"\\\"\\\"\\n\\u001b[1;32m---> 95\\u001b[1;33m     \\u001b[1;32mreturn\\u001b[0m \\u001b[0mAESCipher\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[0mkey\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[1;33m*\\u001b[0m\\u001b[0margs\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[1;33m**\\u001b[0m\\u001b[0mkwargs\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[0;32m     96\\u001b[0m \\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m     97\\u001b[0m \\u001b[1;31m#: Electronic Code Book (ECB). See `blockalgo.MODE_ECB`.\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\",\"\\u001b[1;32m/projects/sage/sage-6.10/local/lib/python2.7/site-packages/Crypto/Cipher/AES.py\\u001b[0m in \\u001b[0;36m__init__\\u001b[1;34m(self, key, *args, **kwargs)\\u001b[0m\\n\\u001b[0;32m     57\\u001b[0m \\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m     58\\u001b[0m         See also `new()` at the module level.\\\"\\\"\\\"\\n\\u001b[1;32m---> 59\\u001b[1;33m         \\u001b[0mblockalgo\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mBlockAlgo\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0m__init__\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[0mself\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[0m_AES\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[0mkey\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[1;33m*\\u001b[0m\\u001b[0margs\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[1;33m**\\u001b[0m\\u001b[0mkwargs\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[0;32m     60\\u001b[0m \\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m     61\\u001b[0m \\u001b[1;32mdef\\u001b[0m \\u001b[0mnew\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[0mkey\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[1;33m*\\u001b[0m\\u001b[0margs\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[1;33m**\\u001b[0m\\u001b[0mkwargs\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m:\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\",\"\\u001b[1;32m/projects/sage/sage-6.10/local/lib/python2.7/site-packages/Crypto/Cipher/blockalgo.py\\u001b[0m in \\u001b[0;36m__init__\\u001b[1;34m(self, factory, key, *args, **kwargs)\\u001b[0m\\n\\u001b[0;32m    139\\u001b[0m \\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m    140\\u001b[0m         \\u001b[1;32mif\\u001b[0m \\u001b[0mself\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mmode\\u001b[0m \\u001b[1;33m!=\\u001b[0m \\u001b[0mMODE_OPENPGP\\u001b[0m\\u001b[1;33m:\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m--> 141\\u001b[1;33m             \\u001b[0mself\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0m_cipher\\u001b[0m \\u001b[1;33m=\\u001b[0m \\u001b[0mfactory\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mnew\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[0mkey\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[1;33m*\\u001b[0m\\u001b[0margs\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[1;33m**\\u001b[0m\\u001b[0mkwargs\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[0;32m    142\\u001b[0m             \\u001b[0mself\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mIV\\u001b[0m \\u001b[1;33m=\\u001b[0m \\u001b[0mself\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0m_cipher\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mIV\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m    143\\u001b[0m         \\u001b[1;32melse\\u001b[0m\\u001b[1;33m:\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\",\"\\u001b[1;31mValueError\\u001b[0m: AES key must be either 16, 24, or 32 bytes long\"]}"],[1,"6,\"outputs\":["],[0,"]}\n\""]],1184,1184,4880,21]],"time":1458303926515}
{"patch":[[[[0,"star"],[-1,"password"],[0,"'\\np"]],977,977,16,8]],"time":1458303922920}
{"patch":[[[[0," = '"],[-1,"sta"],[1,"mysecretpasswo"],[0,"r'\\n"]],973,973,11,22]],"time":1458303916434}
{"patch":[[[[0,"tpasswor"],[1,"d"],[0,"'\\nplain"]],984,984,16,17]],"time":1458303912420}
{"patch":[[[[0,"nt\":"],[-1,"6,\"outputs\":["],[1,"5,\"outputs\":[{\"output_type\":\"error\",\"ename\":\"ValueError\",\"evalue\":\"Input strings must be a multiple of 16 in length\",\"traceback\":[\"\\u001b[1;31m---------------------------------------------------------------------------\\u001b[0m\",\"\\u001b[1;31mValueError\\u001b[0m                                Traceback (most recent call last)\",\"\\u001b[1;32m<ipython-input-5-363d72916f79>\\u001b[0m in \\u001b[0;36m<module>\\u001b[1;34m()\\u001b[0m\\n\\u001b[0;32m      4\\u001b[0m \\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m      5\\u001b[0m \\u001b[0mencobj\\u001b[0m \\u001b[1;33m=\\u001b[0m \\u001b[0mAES\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mnew\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[0mkey\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[0mAES\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mMODE_ECB\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m----> 6\\u001b[1;33m \\u001b[0mciphertext\\u001b[0m \\u001b[1;33m=\\u001b[0m \\u001b[0mencobj\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mencrypt\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[0mplaintext\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0m\",\"\\u001b[1;32m/projects/sage/sage-6.10/local/lib/python2.7/site-packages/Crypto/Cipher/blockalgo.py\\u001b[0m in \\u001b[0;36mencrypt\\u001b[1;34m(self, plaintext)\\u001b[0m\\n\\u001b[0;32m    242\\u001b[0m             \\u001b[1;32mreturn\\u001b[0m \\u001b[0mres\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m    243\\u001b[0m \\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m--> 244\\u001b[1;33m         \\u001b[1;32mreturn\\u001b[0m \\u001b[0mself\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0m_cipher\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mencrypt\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[0mplaintext\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[0;32m    245\\u001b[0m \\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m    246\\u001b[0m     \\u001b[1;32mdef\\u001b[0m \\u001b[0mdecrypt\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[0mself\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[0mciphertext\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m:\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\",\"\\u001b[1;31mValueError\\u001b[0m: Input strings must be a multiple of 16 in length\"]}"],[0,"]}\n\""]],1188,1188,21,2148]],"time":1458303897447}
{"patch":[[[[0," god"],[-1,"!"],[0,"'\\n "]],1020,1020,9,8]],"time":1458303893894}
{"patch":[[[[0,"_count\":"],[-1,"5"],[1,"4"],[0,",\"output"]],1183,1183,17,17],[[[0,"put-"],[-1,"5-363d72916f79"],[1,"4-f3d8501644bc"],[0,">\\u0"]],1543,1543,22,22]],"time":1458303841418}
{"patch":[[[[0,"t is god"],[1,"  "],[0,"'\\n \\nen"]],1016,1016,16,18]],"time":1458303833449}
{"patch":[[[[0,"xecution_count\":"],[-1,"4"],[1,"3"],[0,",\"outputs\":[{\"ou"]],1177,1177,33,33],[[[0,"put-"],[-1,"4-f3d8501644bc"],[1,"3-8c3a0040f7b9"],[0,">\\u0"]],1545,1545,22,22]],"time":1458303824421}
{"patch":[[[[0,"t is god"],[-1,"  "],[0,"'\\n \\nen"]],1016,1016,18,16]],"time":1458303820413}
{"patch":[[[[0,"tinet is"],[-1," "],[0,"god'\\n \\"]],1012,1012,17,16]],"time":1458303816591}
{"patch":[[[[0,"Martinet"],[-1," "],[0,"isgod'\\n"]],1009,1009,17,16]],"time":1458303809423}
{"patch":[[[[0,"rtinetis"],[1," "],[0,"god'\\n \\"]],1011,1011,16,17],[[[0,"_count\":"],[-1,"3"],[1,"2"],[0,",\"output"]],1182,1182,17,17],[[[0,"put-"],[-1,"3-8c3a0040"],[1,"2-363d72916"],[0,"f7"],[-1,"b"],[0,"9>\\u"]],1542,1542,21,21]],"time":1458303786074}
{"patch":[[[[0,"Martinet"],[1," "],[0,"is god'\\"]],1009,1009,16,17]],"time":1458303782177}
{"patch":[[[[0,"_count\":"],[-1,"2"],[1,"1"],[0,",\"output"]],1183,1183,17,17],[[[0,"e\":\""],[-1,"Input strings must be a multiple of 16 in le"],[1,"AES key must be either 16, 24, or 32 bytes lo"],[0,"ng"],[-1,"th"],[0,"\",\"t"]],1254,1254,56,55],[[[0,"put-"],[-1,"2-363d72916f79"],[1,"1-49da60ca9221"],[0,">\\u0"]],1542,1542,22,22],[[[0,"2m      "],[-1,"4"],[1,"3\\u001b[0m \\u001b[0mplaintext\\u001b[0m \\u001b[1;33m=\\u001b[0m \\u001b[1;34m'Martinet is god'"],[0,"\\u001b[0"]],1629,1629,17,107],[[[0,"is god'\\u001b[0m"],[-1," "],[0,"\\u001b[1;33m\\u00"]],1721,1721,33,32],[[[0,"32m     "],[1," 4\\u001b[0m \\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m---->"],[0," 5\\u001b"]],1778,1778,16,77],[[[0,"2m----> 5\\u001b["],[-1,"0"],[1,"1;33"],[0,"m \\u001b[0mencob"]],1840,1840,33,36],[[[0,"n\\u001b["],[-1,"1;32m---->"],[1,"0m\\u001b[0;32m     "],[0," 6\\u001b"]],2162,2162,26,35],[[[0,"    6\\u001b["],[-1,"1;33"],[1,"0"],[0,"m \\u001b[0mc"]],2186,2186,28,25],[[[0,"01b[0m\\n"],[-1,"\\u001b[0m"],[0,"\",\"\\u001"]],2419,2419,25,16],[[[0,"her/"],[-1,"blockalgo"],[1,"AES"],[0,".py\\"]],2511,2511,17,11],[[[0,"1b[0;36m"],[-1,"encrypt"],[1,"new"],[0,"\\u001b[1"]],2538,2538,23,19],[[[0,"34m("],[-1,"self, plaintext)"],[1,"key, *args, **kwargs)\\u001b[0m\\n\\u001b[0;32m     93\\u001b[0m     \\u001b[1;33m:\\u001b[0m\\u001b[0mReturn\\u001b[0m\\u001b[1;33m:\\u001b[0m \\u001b[0man\\u001b[0m \\u001b[1;33m`\\u001b[0m\\u001b[0mAESCipher\\u001b[0m\\u001b[1;33m`\\u001b[0m \\u001b[0mobject\\u001b[0m\\u001b[1;33m\\u001b[0m"],[0,"\\u00"]],2558,2558,24,280],[[[0,"    "],[-1,"242"],[1," 94"],[0,"\\u00"]],2857,2857,11,11],[[[0,"001b[0m     "],[-1,"   "],[1,"\\\"\\\"\\\"\\n\\u001b[1;32m---> 95\\u001b[1;33m"],[0,"     \\u001b["]],2866,2866,27,63],[[[0,"b[0m"],[-1,"res"],[1,"AESCipher\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[0mkey\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[1;33m*\\u001b[0m\\u001b[0margs\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[1;33m**\\u001b[0m\\u001b[0mkwargs\\u001b[0m\\u001b[1;33m)"],[0,"\\u00"]],2955,2955,11,219],[[[0,"001b[0m\\n\\u001b["],[1,"0m\\u001b["],[0,"0;32m    243\\u00"]],3202,3202,32,41],[[[0,"    "],[-1,"243\\u001b[0m \\u001b[1;33m\\u001b[0m\\u001b[0m"],[1," 96\\u001b[0m \\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m     97\\u001b[0m \\u001b[1;31m#: Electronic Code Book (ECB). See `blockalgo.MODE_ECB`.\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\",\"\\u001b[1;32m/projects/sage/sage-6.10/local/lib/python2.7/site-packages/Crypto/Cipher/AES.py\\u001b[0m in \\u001b[0;36m__init__\\u001b[1;34m(self, key, *args, **kwargs)\\u001b[0m\\n\\u001b[0;32m     57\\u001b[0m \\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m     58\\u001b[0m         See also `new()` at the module level.\\\"\\\"\\\""],[0,"\\n\\u"]],3232,3232,51,531],[[[0,"2m--"],[1,"-"],[0,"> "],[-1,"244"],[1,"59"],[0,"\\u00"]],3771,3771,13,13],[[[0," \\u001b["],[-1,"1;32mreturn\\u001b[0m "],[1,"0mblockalgo\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mBlockAlgo\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0m__init__\\u001b[0m\\u001b[1;33m(\\u001b[0m"],[0,"\\u001b[0"]],3800,3800,37,155],[[[0,"b[0m\\u001b[1;33m"],[-1,"."],[1,","],[0,"\\u001b[0m\\u001b["]],3965,3965,33,33],[[[0,"[1;33m,\\u001b[0m"],[1," "],[0,"\\u001b[0m_cipher"]],3975,3975,32,33],[[[0,"[0m_"],[-1,"cipher\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mencrypt"],[1,"AES\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[0mkey\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[1;33m*\\u001b[0m\\u001b[0margs\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[1;33m**\\u001b[0m\\u001b[0mkwargs\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[0;32m     60\\u001b[0m \\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m     61\\u001b[0m \\u001b[1;32mdef\\u001b[0m \\u001b[0mnew\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[0mkey\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[1;33m*\\u001b[0m\\u001b[0margs\\u001b[0m\\u001b[1;33m,"],[0,"\\u00"]],3998,3998,61,523],[[[0,"[1;33m,\\u001b[0m"],[1," "],[0,"\\u001b[1;33m(\\u0"]],4510,4510,32,33],[[[0,"[0m \\u001b[1;33m"],[-1,"("],[1,"**"],[0,"\\u001b[0m\\u001b["]],4523,4523,33,34],[[[0,"[0m\\u001b[0m"],[-1,"plaintext"],[1,"kwargs"],[0,"\\u001b[0m\\u0"]],4547,4547,33,30],[[[0,"1b[1;33m"],[-1,"\\u001b[0m\\u001b[0m\\n"],[1,":\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\",\"\\u001b[1;32m/projects/sage/sage-6.10/local/lib/python2.7/site-packages/Crypto/Cipher/blockalgo.py"],[0,"\\u001b[0"]],4600,4600,36,158],[[[0,"algo.py\\u001b[0m"],[1," in "],[0,"\\u001b[0;32m    "]],4743,4743,32,36],[[[0,"[0;3"],[-1,"2m    245"],[1,"6m__init__\\u001b[1;34m(self, factory, key, *args, **kwargs)\\u001b[0m\\n\\u001b[0;32m    139"],[0,"\\u00"]],4769,4769,17,97],[[[0,"    "],[-1,"246"],[1,"140"],[0,"\\u00"]],4916,4916,11,11],[[[0,"40\\u001b[0m     "],[1,"    "],[0,"\\u001b[1;32mdef\\"]],4921,4921,32,36],[[[0,"    \\u001b[1;32m"],[-1,"de"],[1,"i"],[0,"f\\u001b[0m \\u001"]],4937,4937,34,33],[[[0,"b[0m"],[-1,"decrypt\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[0mself\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[0mciphertext\\u001b[0m\\u001b[1;33m)"],[1,"self\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mmode\\u001b[0m \\u001b[1;33m!=\\u001b[0m \\u001b[0mMODE_OPENPGP\\u001b[0m\\u001b[1;33m:\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m--> 141\\u001b[1;33m             \\u001b[0mself\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0m_cipher\\u001b[0m \\u001b[1;33m=\\u001b[0m \\u001b[0mfactory\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mnew\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[0mkey\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[1;33m*\\u001b[0m\\u001b[0margs\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[1;33m**\\u001b[0m\\u001b[0mkwargs\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[0;32m    142\\u001b[0m             \\u001b[0mself\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mIV\\u001b[0m \\u001b[1;33m=\\u001b[0m \\u001b[0mself\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0m_cipher\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mIV\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m    143\\u001b[0m         \\u001b[1;32melse"],[0,"\\u00"]],4970,4970,132,947],[[[0,"0m: "],[-1,"Input strings must be a multiple of 16 in le"],[1,"AES key must be either 16, 24, or 32 bytes lo"],[0,"ng"],[-1,"th"],[0,"\"]}]"]],6008,6008,56,55]],"time":1458303756629}
{"patch":[[[[0," = '"],[-1,"mysecretpassword"],[1,"star"],[0,"'\\np"]],973,973,24,12]],"time":1458303752424}
{"patch":[[[[0,"nt\":"],[-1,"1,\"outputs\":[{\"output_type\":\"error\",\"ename\":\"ValueError\",\"evalue\":\"AES key must be either 16, 24, or 32 bytes long\",\"traceback\":[\"\\u001b[1;31m---------------------------------------------------------------------------\\u001b[0m\",\"\\u001b[1;31mValueError\\u001b[0m                                Traceback (most recent call last)\",\"\\u001b[1;32m<ipython-input-1-49da60ca9221>\\u001b[0m in \\u001b[0;36m<module>\\u001b[1;34m()\\u001b[0m\\n\\u001b[0;32m      3\\u001b[0m \\u001b[0mplaintext\\u001b[0m \\u001b[1;33m=\\u001b[0m \\u001b[1;34m'Martinet is god'\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m      4\\u001b[0m \\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m----> 5\\u001b[1;33m \\u001b[0mencobj\\u001b[0m \\u001b[1;33m=\\u001b[0m \\u001b[0mAES\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mnew\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[0mkey\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[0mAES\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mMODE_ECB\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[0;32m      6\\u001b[0m \\u001b[0mciphertext\\u001b[0m \\u001b[1;33m=\\u001b[0m \\u001b[0mencobj\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mencrypt\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[0mplaintext\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\",\"\\u001b[1;32m/projects/sage/sage-6.10/local/lib/python2.7/site-packages/Crypto/Cipher/AES.py\\u001b[0m in \\u001b[0;36mnew\\u001b[1;34m(key, *args, **kwargs)\\u001b[0m\\n\\u001b[0;32m     93\\u001b[0m     \\u001b[1;33m:\\u001b[0m\\u001b[0mReturn\\u001b[0m\\u001b[1;33m:\\u001b[0m \\u001b[0man\\u001b[0m \\u001b[1;33m`\\u001b[0m\\u001b[0mAESCipher\\u001b[0m\\u001b[1;33m`\\u001b[0m \\u001b[0mobject\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m     94\\u001b[0m     \\\"\\\"\\\"\\n\\u001b[1;32m---> 95\\u001b[1;33m     \\u001b[1;32mreturn\\u001b[0m \\u001b[0mAESCipher\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[0mkey\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[1;33m*\\u001b[0m\\u001b[0margs\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[1;33m**\\u001b[0m\\u001b[0mkwargs\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[0;32m     96\\u001b[0m \\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m     97\\u001b[0m \\u001b[1;31m#: Electronic Code Book (ECB). See `blockalgo.MODE_ECB`.\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\",\"\\u001b[1;32m/projects/sage/sage-6.10/local/lib/python2.7/site-packages/Crypto/Cipher/AES.py\\u001b[0m in \\u001b[0;36m__init__\\u001b[1;34m(self, key, *args, **kwargs)\\u001b[0m\\n\\u001b[0;32m     57\\u001b[0m \\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m     58\\u001b[0m         See also `new()` at the module level.\\\"\\\"\\\"\\n\\u001b[1;32m---> 59\\u001b[1;33m         \\u001b[0mblockalgo\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mBlockAlgo\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0m__init__\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[0mself\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[0m_AES\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[0mkey\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[1;33m*\\u001b[0m\\u001b[0margs\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[1;33m**\\u001b[0m\\u001b[0mkwargs\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[0;32m     60\\u001b[0m \\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m     61\\u001b[0m \\u001b[1;32mdef\\u001b[0m \\u001b[0mnew\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[0mkey\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[1;33m*\\u001b[0m\\u001b[0margs\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[1;33m**\\u001b[0m\\u001b[0mkwargs\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m:\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\",\"\\u001b[1;32m/projects/sage/sage-6.10/local/lib/python2.7/site-packages/Crypto/Cipher/blockalgo.py\\u001b[0m in \\u001b[0;36m__init__\\u001b[1;34m(self, factory, key, *args, **kwargs)\\u001b[0m\\n\\u001b[0;32m    139\\u001b[0m \\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m    140\\u001b[0m         \\u001b[1;32mif\\u001b[0m \\u001b[0mself\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mmode\\u001b[0m \\u001b[1;33m!=\\u001b[0m \\u001b[0mMODE_OPENPGP\\u001b[0m\\u001b[1;33m:\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m--> 141\\u001b[1;33m             \\u001b[0mself\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0m_cipher\\u001b[0m \\u001b[1;33m=\\u001b[0m \\u001b[0mfactory\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mnew\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[0mkey\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[1;33m*\\u001b[0m\\u001b[0margs\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[1;33m**\\u001b[0m\\u001b[0mkwargs\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[0;32m    142\\u001b[0m             \\u001b[0mself\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mIV\\u001b[0m \\u001b[1;33m=\\u001b[0m \\u001b[0mself\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0m_cipher\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mIV\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m    143\\u001b[0m         \\u001b[1;32melse\\u001b[0m\\u001b[1;33m:\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\",\"\\u001b[1;31mValueError\\u001b[0m: AES key must be either 16, 24, or 32 bytes long\"]"],[1,"3,\"outputs\":[{\"output_type\":\"display_data\",\"data\":{\"image/png\":\"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\\nSUVORK5CYII=\\n\",\"text/plain\":\"<matplotlib.figure.Figure at 0x7f87faea5ed0>\"},\"metadata\":{}"],[0,"}]}\n"]],1175,1175,4878,13422]],"time":1458303702395}
{"patch":[[[[0," is "],[-1,"god"],[0,"'\\n "]],1005,1005,11,8]],"time":1458303697457}
{"patch":[[[[0," = '"],[-1,"Martinet is "],[0,"'\\n "]],993,993,20,8]],"time":1458303693420}
{"patch":[[[[0,"text = '"],[1,"NCTU is "],[0,"'\\n \\nen"]],989,989,16,24]],"time":1458303689418}
{"patch":[[[[0," = '"],[-1,"NCTU is "],[0,"'\\n "]],993,993,16,8]],"time":1458303685414}
{"patch":[[[[0,"text = '"],[1,"s"],[0,"'\\n \\nen"]],989,989,16,17]],"time":1458303677419}
{"patch":[[[[0,"text = '"],[-1,"s"],[1,"Secret Message A"],[0,"'\\n \\nen"]],989,989,17,32]],"time":1458303673414}
{"patch":[[[[0," = '"],[-1,"star"],[1,"mysecretpassword"],[0,"'\\np"]],973,973,12,24]],"time":1458303665420}
{"patch":[[[[0,"ES\\n"],[-1,"key = 'mysecretpassword'\\nplaintext = 'Secret Message A'\\n \\nencobj = AES.new(key, AES.MODE_ECB)\\nciphertext = encobj.encrypt(plaintext)"],[0,"\"︡{\""]],966,966,144,8]],"time":1458303658459}
{"patch":[[[[0,"port AES"],[-1,"\\n"],[0,"\"︡{\"meta"]],960,960,18,16]],"time":1458303649847}
{"patch":[[[[0,"\"}\n\""],[-1,"from Crypto.Cipher import AES"],[0,"\"︡{\""]],935,935,37,8]],"time":1458303644419}
{"patch":[[[[0,"down\"}\n\""],[1,"# Load the text.\\nwith open('hex-viz-text.txt','rb') as f:\\n    text = f.read()\\n\\n\\nimport numpy as np\\n\\ndef fn_hex_grid( input_text, hex_range ):\\n    # Init grid.\\n    grid = np.zeros((256,256))\\n    # For each combination of letters, populate grid.\\n    for e,each_char in enumerate(input_text):\\n        if e > 0: # Cannot check first one.\\n            y_ix = hex_range.index(each_char.encode('hex'))\\n            x_ix = hex_range.index(input_text[e-1].encode('hex'))\\n            grid[y_ix,x_ix] += 1\\n    # Done > return grid\\n    return grid   \\n\\n\\n# Create a grid for the text\\ntext_grid = fn_hex_grid( input_text=text, hex_range=hex_range )\\n\\n# Plot the text-hex-visualization.\\n%matplotlib inline\\nimport matplotlib.pyplot as plt\\n\\nplt.figure( figsize=(8,8) )\\nplt.pcolor(text_grid, cmap=plt.cm.OrRd)\\nplt.xlim([30, 120])\\nplt.ylim([30, 120])\\nplt.show()"],[0,"\"︡{\"meta"]],931,931,16,885]],"time":1458303637423}
{"patch":[[[[0,"irin"],[-1,"g x"],[0,")\"︡{"]],857,857,11,8]],"time":1458303625414}
{"patch":[[[[0," it "],[-1,"(only pairin)"],[0,"\"︡{\""]],845,845,21,8]],"time":1458303621421}
{"patch":[[[[0,"nHow"],[-1," can we do it "],[0,"\"︡{\""]],831,831,22,8]],"time":1458303617571}
{"patch":[[[[0,"crypto\\n"],[-1,"How"],[1,"from Crypto.Cipher import AES"],[0,"\"︡{\"meta"]],824,824,19,45]],"time":1458303613419}
{"patch":[[[[0,"to\\n"],[-1,"from Crypto.Cipher import AES"],[0,"\"︡{\""]],828,828,37,8]],"time":1458303609462}
{"patch":[[[[0,"cell_type\":\""],[-1,"markdown\""],[1,"code\",\"execution_count\":2,\"outputs\":[{\"output_type\":\"stream\",\"text\":\"HEX:  1f  | int:  31  | Char: \\u001f\\nHEX:  20  | int:  32  | Char:  \\nHEX:  21  | int:  33  | Char: !\\nHEX:  22  | int:  34  | Char: \\\"\\nHEX:  23  | int:  35  | Char: #\\nHEX:  24  | int:  36  | Char: $\\nHEX:  25  | int:  37  | Char: %\\nHEX:  26  | int:  38  | Char: &\\nHEX:  27  | int:  39  | Char: '\\nHEX:  28  | int:  40  | Char: (\\nHEX:  29  | int:  41  | Char: )\\nHEX:  2a  | int:  42  | Char: *\\nHEX:  2b  | int:  43  | Char: +\\nHEX:  2c  | int:  44  | Char: ,\\nHEX:  2d  | int:  45  | Char: -\\nHEX:  2e  | int:  46  | Char: .\\nHEX:  2f  | int:  47  | Char: /\\nHEX:  30  | int:  48  | Char: 0\\nHEX:  31  | int:  49  | Char: 1\\nHEX:  32  | int:  50  | Char: 2\\nHEX:  33  | int:  51  | Char: 3\\nHEX:  34  | int:  52  | Char: 4\\nHEX:  35  | int:  53  | Char: 5\\nHEX:  36  | int:  54  | Char: 6\\nHEX:  37  | int:  55  | Char: 7\\nHEX:  38  | int:  56  | Char: 8\\nHEX:  39  | int:  57  | Char: 9\\nHEX:  3a  | int:  58  | Char: :\\nHEX:  3b  | int:  59  | Char: ;\\nHEX:  3c  | int:  60  | Char: <\\nHEX:  3d  | int:  61  | Char: =\\nHEX:  3e  | int:  62  | Char: >\\nHEX:  3f  | int:  63  | Char: ?\\nHEX:  40  | int:  64  | Char: @\\nHEX:  41  | int:  65  | Char: A\\nHEX:  42  | int:  66  | Char: B\\nHEX:  43  | int:  67  | Char: C\\nHEX:  44  | int:  68  | Char: D\\nHEX:  45  | int:  69  | Char: E\\nHEX:  46  | int:  70  | Char: F\\nHEX:  47  | int:  71  | Char: G\\nHEX:  48  | int:  72  | Char: H\\nHEX:  49  | int:  73  | Char: I\\nHEX:  4a  | int:  74  | Char: J\\nHEX:  4b  | int:  75  | Char: K\\nHEX:  4c  | int:  76  | Char: L\\nHEX:  4d  | int:  77  | Char: M\\nHEX:  4e  | int:  78  | Char: N\\nHEX:  4f  | int:  79  | Char: O\\n\",\"name\":\"stdout\"}]"],[0,"}\n\"# Load th"]],882,882,33,1735]],"time":1458303512872}
{"patch":[[[[0,"# Py"],[-1,"crypto\\n"],[0,"\"︡{\""]],820,820,16,8]],"time":1458303508418}
{"patch":[[[[0,"n\"}\n\"## "],[-1,"Py"],[1,"pYCRY"],[0,"\"︡{\"meta"]],814,814,18,21]],"time":1458303504418}
{"patch":[[[[0,"\"## "],[-1,"pYCRY"],[0,"\"︡{\""]],818,818,13,8]],"time":1458303500419}
{"patch":[[[[0,"down\"}\n\""],[-1,"## "],[1,"hex_range = fn_hex_range()\\nfor e,each_hex in enumerate(hex_range):\\n    if e > 30 and e < 80:\\n        print 'HEX: ', each_hex, ' | int: ', int(each_hex,16), ' | Char:', each_hex.decode('hex')"],[0,"\"︡{\"meta"]],811,811,19,209]],"time":1458303496426}
{"patch":[[[[0,"and "],[-1,"https://cryptography.io/en/latest/"],[0,"\"︡{\""]],707,707,42,8]],"time":1458303483430}
{"patch":[[[[0,"k se"],[-1,"cruity"],[0,". To"]],157,157,14,8]],"time":1458303448887}
{"patch":[[[[0," or "],[-1,"network se"],[0,". To"]],147,147,18,8]],"time":1458303444423}
{"patch":[[[[0,"ning"],[-1," or "],[0,". To"]],143,143,12,8]],"time":1458303440454}
{"patch":[[[[0,"pto/doc/"],[-1," and "],[0,"\"︡{\"meta"]],678,678,21,16]],"time":1458303422848}
{"patch":[[[[0,"See "],[-1,"https://www.dlitz.net/software/pycrypto/doc/"],[0,"\"︡{\""]],638,638,52,8]],"time":1458303417462}
{"patch":[[[[0,"lkit. Se"],[-1,"e "],[0,"\"︡{\"meta"]],632,632,18,16]],"time":1458303404852}
{"patch":[[[[0," too"],[-1,"lkit. Se"],[0,"\"︡{\""]],628,628,16,8]],"time":1458303400511}
{"patch":[[[[0,"ons "],[-1,"of great to"],[0,"o\"︡{"]],616,616,19,8]],"time":1458303396451}
{"patch":[[[[0,"ns a"],[-1," collections o"],[0,"\"︡{\""]],603,603,22,8]],"time":1458303392425}
{"patch":[[[[0,"ontains "],[-1,"a"],[0,"\"︡{\"meta"]],598,598,17,16]],"time":1458303388610}
{"patch":[[[[0,"cont"],[-1,"ains "],[0,"\"︡{\""]],597,597,13,8]],"time":1458303384426}
{"patch":[[[[0,", an"],[-1,"d also cont"],[0,"\"︡{\""]],586,586,19,8]],"time":1458303380425}
{"patch":[[[[0," upo"],[-1,"n python, an"],[0,"\"︡{\""]],574,574,20,8]],"time":1458303376430}
{"patch":[[[[0,"ectl"],[-1,"y builds upo"],[0,"\"︡{\""]],562,562,20,8]],"time":1458303372427}
{"patch":[[[[0," is "],[-1,"directl"],[0,"\"︡{\""]],555,555,15,8]],"time":1458303368425}
{"patch":[[[[0,"tead"],[-1," since it is "],[0,"\"︡{\""]],542,542,21,8]],"time":1458303364437}
{"patch":[[[[0,"togr"],[-1,"apjy instead"],[0,"\"︡{\""]],530,530,20,8]],"time":1458303360428}
{"patch":[[[[0,"crtp"],[-1,"o and cryptogr"],[0,"\"︡{\""]],516,516,22,8]],"time":1458303356427}
{"patch":[[[[0,"use "],[-1,"pycrtp"],[0,"\"︡{\""]],510,510,14,8]],"time":1458303352426}
{"patch":[[[[0,"I wi"],[-1,"ll use "],[0,"\"︡{\""]],503,503,15,8]],"time":1458303348813}
{"patch":[[[[0,"this"],[-1," tutorial I wi"],[0,"\"︡{\""]],489,489,22,8]],"time":1458303344423}
{"patch":[[[[0,"\\n\\n"],[-1,"However, in this"],[0,"\"︡{\""]],473,473,24,8]],"time":1458303340424}
{"patch":[[[[0,"pto.html"],[-1,"."],[0,"\\n\\nIf y"]],287,287,17,16],[[[0,"ooks"],[-1,".\\n\\n"],[0,"\"︡{\""]],467,467,13,8]],"time":1458303336424}
{"patch":[[[[0," it "],[-1,"http://www.sagemath.org/library-publications.html#books"],[0,"\"︡{\""]],412,412,63,8]],"time":1458303328467}
{"patch":[[[[0,"rce "],[-1,"for it "],[0,"\"︡{\""]],405,405,15,8]],"time":1458303285423}
{"patch":[[[[0,"plen"],[-1,"ty source "],[0,"\"︡{\""]],395,395,18,8]],"time":1458303281423}
{"patch":[[[[0,"elat"],[-1,"ive plen"],[0,"\"︡{\""]],387,387,16,8]],"time":1458303277425}
{"patch":[[[[0,"d th"],[-1,"ere are relat"],[0,"\"︡{\""]],374,374,21,8]],"time":1458303273424}
{"patch":[[[[0,"d ch"],[-1,"oice, and th"],[0,"\"︡{\""]],362,362,20,8]],"time":1458303269508}
{"patch":[[[[0,"age "],[-1,"may be a good ch"],[0,"\"︡{\""]],346,346,24,8]],"time":1458303265777}
{"patch":[[[[0,"yopt"],[-1,"o, sage "],[0,"\"︡{\""]],338,338,16,8]],"time":1458303261428}
{"patch":[[[[0,"or o"],[-1,"f cryopt"],[0,"\"︡{\""]],330,330,16,8]],"time":1458303257457}
{"patch":[[[[0,"t a "],[-1,"flavor o"],[0,"\"︡{\""]],322,322,16,8]],"time":1458303253430}
{"patch":[[[[0,"ld l"],[-1,"ike to get a "],[0,"\"︡{\""]],309,309,21,8]],"time":1458303249439}
{"patch":[[[[0,"nIf "],[-1,"you would l"],[0,"\"︡{\""]],298,298,19,8]],"time":1458303245422}
{"patch":[[[[0,"html"],[-1,"\\n\\nIf "],[0,"\"︡{\""]],291,291,15,8]],"time":1458303241418}
{"patch":[[[[0,"ols "],[-1,"http://docs.sympy.org/dev/_modules/sympy/crypto/crypto.html"],[0,"\"︡{\""]],232,232,67,8]],"time":1458303237474}
{"patch":[[[[0," too"],[-1,"ls "],[0,"\"︡{\""]],229,229,11,8]],"time":1458303225852}
{"patch":[[[[0,"e cr"],[-1,"yptography too"],[0,"\"︡{\""]],215,215,22,8]],"time":1458303221440}
{"patch":[[[[0,"some"],[-1,"what complete cr"],[0,"\"︡{\""]],199,199,24,8]],"time":1458303217428}
{"patch":[[[[0,"des "],[-1,"some"],[0,"\"︡{\""]],195,195,12,8]],"time":1458303213428}
{"patch":[[[[0,"ympy"],[-1," provides "],[0,"\"︡{\""]],185,185,18,8]],"time":1458303209425}
{"patch":[[[[0,"the "],[-1,"sympy"],[0,"\"︡{\""]],180,180,13,8]],"time":1458303205428}
{"patch":[[[[0,"know"],[-1,"ledge, the "],[0,"\"︡{\""]],169,169,19,8]],"time":1458303201428}
{"patch":[[[[0,"of m"],[-1,"our know"],[0,"\"︡{\""]],161,161,16,8]],"time":1458303197443}
{"patch":[[[[0," best of"],[-1," m"],[0,"\"︡{\"meta"]],155,155,18,16]],"time":1458303193428}
{"patch":[[[[0,"ng. "],[-1,"To the best of"],[0,"\"︡{\""]],145,145,22,8]],"time":1458303189502}
{"patch":[[[[0,"arning. "],[1,"A"],[0,"\"︡{\"meta"]],141,141,16,17]],"time":1458303185446}
{"patch":[[[[0,"arning. "],[-1,"A"],[0,"\"︡{\"meta"]],141,141,17,16]],"time":1458303181438}
{"patch":[[[[0,"arni"],[-1,"ng. "],[0,"\"︡{\""]],141,141,12,8]],"time":1458303177425}
{"patch":[[[[0,"like"],[-1," machine learni"],[0,"\"︡{\""]],126,126,23,8]],"time":1458303173437}
{"patch":[[[[0,"her "],[-1,"fields like"],[0,"\"︡{\""]],115,115,19,8]],"time":1458303169425}
{"patch":[[[[0,"ntif"],[-1,"ul as other "],[0,"\"︡{\""]],103,103,20,8]],"time":1458303165425}
{"patch":[[[[0,"not "],[-1,"as plentif"],[1,"pl"],[0,"\"︡{\""]],93,93,18,10]],"time":1458303161451}
{"patch":[[[[0,"are "],[-1,"not pl"],[0,"\"︡{\""]],89,89,14,8]],"time":1458303157532}
{"patch":[[[[0,"ide "],[-1,"python are "],[0,"\"︡{\""]],78,78,19,8]],"time":1458303153482}
{"patch":[[[[0,"raph"],[-1,"y modules inside "],[0,"\"︡{\""]],61,61,25,8]],"time":1458303149436}
{"patch":[[[[0,"\\nTh"],[-1,"e cryptograph"],[0,"\"︡{\""]],48,48,21,8]],"time":1458303145421}
{"patch":[[[[0,"erview\\n"],[-1,"Th"],[1,"P"],[0,"\"︡{\"meta"]],42,42,18,17]],"time":1458303141420}
{"patch":[[[[0,"rvie"],[-1,"w\\nP"],[0,"\"︡{\""]],43,43,12,8]],"time":1458303137460}
{"patch":[[[[0,"\"## "],[-1,"Overvie"],[0,"\"︡{\""]],36,36,15,8]],"time":1458303133419}
{"patch":[[[[0,"\"}\n\""],[-1,"## "],[1,"def fn_hex_range():\\n    init_int = range(0,16)\\n    init_hex = [ hex(x)[2] for x in init_int ]\\n    # Init hex_range and start populating it.\\n    hex_range = []\\n    for each_hex in init_hex:\\n        hex_range += [ each_hex + x for x in init_hex ]\\n    # Done > return\\n    return hex_range"],[0,"\"︡{\""]],33,33,11,301]],"time":1458303129429}
{"patch":[[[[0,"e\":\""],[-1,"markdown\""],[1,"code\",\"execution_count\":1,\"outputs\":[]"],[0,"}\n\"h"]],388,388,17,46]],"time":1458303125445}
{"patch":[[[[0,"rue,\"collapsed\":"],[-1,"fals"],[1,"tru"],[0,"e},\"cell_type\":\""]],17482,17482,36,35],[[[0,"nt\":"],[-1,"4,\"outputs\":[{\"output_type\":\"stream\",\"text\":\"/projects/sage/sage-6.10/local/lib/python2.7/site-packages/Crypto/Util/number.py:57: PowmInsecureWarning: Not using mpz_powm_sec.  You should rebuild using libgmp >= 5 to avoid timing attack vulnerability.\\n  _warn(\\\"Not using mpz_powm_sec.  You should rebuild using libgmp >= 5 to avoid timing attack vulnerability.\\\", PowmInsecureWarning)\\n\",\"name\":\"stderr\"},{\"output_type\":\"display_data\",\"data\":{\"image/png\":\"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\\n\",\"text/plain\":\"<matplotlib.figure.Figure at 0x7f87fa449a10>\"},\"metadata\":{}}"],[1,"null,\"outputs\":["],[0,"]}\n\""]],17537,17537,21196,24]],"time":1458287510501}
{"patch":[[[[0,":[]}"],[-1,"\n\"\"︡{\"metadata\":{\"trusted\":true,\"collapsed\":true},\"cell_type\":\"code\",\"execution_count\":null,\"outputs\":[]}"]],17555,17555,109,4]],"time":1458287506407}
{"patch":[[[[0,"rue,\"collapsed\":"],[-1,"fals"],[1,"tru"],[0,"e},\"cell_type\":\""]],3297,3297,36,35],[[[0,"nt\":"],[-1,"3,\"outputs\":[{\"output_type\":\"display_data\",\"data\":{\"image/png\":\"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\\nSUVORK5CYII=\\n\",\"text/plain\":\"<matplotlib.figure.Figure at 0x7f87faea5ed0>\"},\"metadata\":{}}"],[1,"null,\"outputs\":["],[0,"]}\n\""]],3352,3352,13423,24]],"time":1458287502490}
{"patch":[[[[0,"]}\n\""],[-1,"import base64\\nfrom Crypto import Random\\nfrom Crypto.Cipher import AES\\n\\n# Function to encrypt the information.\\ndef fn_encrypt( message, passphrase ):\\n    BLOCK_SIZE = 16\\n    IV = Random.new().read(BLOCK_SIZE)\\n    aes = AES.new( passphrase, AES.MODE_CFB, IV )\\n    return base64.b64encode(aes.encrypt(message))\\n\\n# Get the encrypted text.\\ntext_enc = fn_encrypt( message=text, passphrase='ThisIsNotEncrypt' )\\n\\n# Create a grid for the encrypted text.\\ntext_enc_grid = fn_hex_grid( input_text=text_enc, hex_range=hex_range )\\n\\n# Plot the figure\\nplt.figure( figsize=(8,8) )\\nplt.pcolor(text_enc_grid, cmap=plt.cm.OrRd)\\nplt.xlim([30, 120])\\nplt.ylim([30, 120])\\nplt.show()"],[0,"\"︡{\""]],3372,3372,688,8]],"time":1458287452883}
{"patch":[[[[0,":[]}"],[-1,"\n\"\"︡{\"metadata\":{\"trusted\":true,\"collapsed\":true},\"cell_type\":\"code\",\"execution_count\":null,\"outputs\":[]}"]],3370,3370,109,4]],"time":1458287448923}
{"patch":[[[[0,"]}\n\""],[-1,"# Load the text.\\nwith open('hex-viz-text.txt','rb') as f:\\n    text = f.read()\\n\\n\\nimport numpy as np\\n\\ndef fn_hex_grid( input_text, hex_range ):\\n    # Init grid.\\n    grid = np.zeros((256,256))\\n    # For each combination of letters, populate grid.\\n    for e,each_char in enumerate(input_text):\\n        if e > 0: # Cannot check first one.\\n            y_ix = hex_range.index(each_char.encode('hex'))\\n            x_ix = hex_range.index(input_text[e-1].encode('hex'))\\n            grid[y_ix,x_ix] += 1\\n    # Done > return grid\\n    return grid   \\n\\n\\n# Create a grid for the text\\ntext_grid = fn_hex_grid( input_text=text, hex_range=hex_range )\\n\\n# Plot the text-hex-visualization.\\n%matplotlib inline\\nimport matplotlib.pyplot as plt\\n\\nplt.figure( figsize=(8,8) )\\nplt.pcolor(text_grid, cmap=plt.cm.OrRd)\\nplt.xlim([30, 120])\\nplt.ylim([30, 120])\\nplt.show()"],[0,"\"︡{\""]],2398,2398,877,8]],"time":1458287431403}
{"patch":[[[[0,"ed\":"],[-1,"false},\"cell_type\":\"code\",\"execution_count\":2,\"outputs\":[{\"output_type\":\"stream\",\"text\":\"HEX:  1f  | int:  31  | Char: \\u001f\\nHEX:  20  | int:  32  | Char:  \\nHEX:  21  | int:  33  | Char: !\\nHEX:  22  | int:  34  | Char: \\\"\\nHEX:  23  | int:  35  | Char: #\\nHEX:  24  | int:  36  | Char: $\\nHEX:  25  | int:  37  | Char: %\\nHEX:  26  | int:  38  | Char: &\\nHEX:  27  | int:  39  | Char: '\\nHEX:  28  | int:  40  | Char: (\\nHEX:  29  | int:  41  | Char: )\\nHEX:  2a  | int:  42  | Char: *\\nHEX:  2b  | int:  43  | Char: +\\nHEX:  2c  | int:  44  | Char: ,\\nHEX:  2d  | int:  45  | Char: -\\nHEX:  2e  | int:  46  | Char: .\\nHEX:  2f  | int:  47  | Char: /\\nHEX:  30  | int:  48  | Char: 0\\nHEX:  31  | int:  49  | Char: 1\\nHEX:  32  | int:  50  | Char: 2\\nHEX:  33  | int:  51  | Char: 3\\nHEX:  34  | int:  52  | Char: 4\\nHEX:  35  | int:  53  | Char: 5\\nHEX:  36  | int:  54  | Char: 6\\nHEX:  37  | int:  55  | Char: 7\\nHEX:  38  | int:  56  | Char: 8\\nHEX:  39  | int:  57  | Char: 9\\nHEX:  3a  | int:  58  | Char: :\\nHEX:  3b  | int:  59  | Char: ;\\nHEX:  3c  | int:  60  | Char: <\\nHEX:  3d  | int:  61  | Char: =\\nHEX:  3e  | int:  62  | Char: >\\nHEX:  3f  | int:  63  | Char: ?\\nHEX:  40  | int:  64  | Char: @\\nHEX:  41  | int:  65  | Char: A\\nHEX:  42  | int:  66  | Char: B\\nHEX:  43  | int:  67  | Char: C\\nHEX:  44  | int:  68  | Char: D\\nHEX:  45  | int:  69  | Char: E\\nHEX:  46  | int:  70  | Char: F\\nHEX:  47  | int:  71  | Char: G\\nHEX:  48  | int:  72  | Char: H\\nHEX:  49  | int:  73  | Char: I\\nHEX:  4a  | int:  74  | Char: J\\nHEX:  4b  | int:  75  | Char: K\\nHEX:  4c  | int:  76  | Char: L\\nHEX:  4d  | int:  77  | Char: M\\nHEX:  4e  | int:  78  | Char: N\\nHEX:  4f  | int:  79  | Char: O\\n\",\"name\":\"stdout\"}]}\n\"\"︡{\"metadata\":{\"trusted\":true,\"collapsed\":"],[0,"true"]],664,664,1784,8]],"time":1458287421423}
{"patch":[[[[0,"]}\n\""],[-1,"hex_range = fn_hex_range()\\nfor e,each_hex in enumerate(hex_range):\\n    if e > 30 and e < 80:\\n        print 'HEX: ', each_hex, ' | int: ', int(each_hex,16), ' | Char:', each_hex.decode('hex')"],[0,"\"︡{\""]],429,429,201,8]],"time":1458287417418}
{"patch":[[[[0,"ed\":"],[-1,"true},\"cell_type\":\"code\",\"execution_count\":1,\"outputs\":[]}\n\"\"︡{\"metadata\":{\"trusted\":true,\"collapsed\":tru"],[1,"fals"],[0,"e},\""]],369,369,113,12]],"time":1458287413423}
{"patch":[[[[-1,"{\"notebook_name\":\"00_Basics.ipynb\"}\n\"def fn_hex_range():\\n    init_int = range(0,16)\\n    init_hex = [ hex(x)[2] for x in init_int ]\\n    # Init hex_range and start populating it.\\n    hex_range = []\\n    for each_hex in init_hex:\\n        hex_range += [ each_hex + x for x in init_hex ]\\n    # Done > return\\n    return hex_range\"︡{\"metadata\":{\"collapsed\":false,\"trusted\":false},\"cell_type\":\"code\",\"execution_count\":null,\"outputs\":[]}"]],0,0,435,0]],"time":1458287409428}